Процедура ВыгрузитьТоварыXDTO(ПараметрыОбмена, ИмяКаталога, Владелец, ВладелецТип, лМенеджерВременныхТаблиц, СтрокаТаблицыКаталогов, МассивКартинок, МассивФайлов)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = лМенеджерВременныхТаблиц;
	//Временная таблица формируется в функции СформироватьВременныеТаблицыПоИнформацииОТоварахПакета
	ТекстЗапроса = "ВЫБРАТЬ
	               |	*
	               |ИЗ
	               |	ВремНоменклатура КАК ВремНоменклатура
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	ВремНоменклатура.ПриоритетСортировки";
	
	Запрос.Текст = ТекстЗапроса; 
	
	ТзнТоваров = Запрос.Выполнить().Выгрузить();
	
	
	Если ТзнТоваров.Количество() > 0 тогда	
		
		Б_ОбщиеПроцедурыИФункцииОбменаССайтом.СообщитьПодробно("Выгрузка товаров в XML.", ПараметрыОбмена);
		
		Итератор = 0;
		ВыгруженоКартинок 	= 0;
		ВыгруженоФайлов		= 0;
		СозданоКартинок		= 0;
		СозданоФайлов		= 0;
		
		ДеревоГрупп = СтрокаТаблицыКаталогов.ДеревоГрупп;  
		ВыгружатьПоДеревуТоваров = НЕ ДеревоГрупп.Строки.Количество() = 0;
		
		Если ВыгружатьПоДеревуТоваров тогда
			
			ТаблицаДереваГрупп = ПолучитьНоменклатуруГруппДерева(ДеревоГрупп, лМенеджерВременныхТаблиц);
			
		КонецЕсли;
		
		XDTOТоварыТип 	= Б_ОбщиеПроцедурыИФункцииОбменаССайтом.ПолучениеТипОбъектаXDTO(ПараметрыОбмена, "Товары", Истина, ВладелецТип);
		XDTOТовары 		= ПараметрыОбмена.МояФабрикаXDTO.Создать(XDTOТоварыТип); 
		
		XDTOТоварТип 	= Б_ОбщиеПроцедурыИФункцииОбменаССайтом.ПолучениеТипОбъектаXDTO(ПараметрыОбмена, "Товар");
		
		XDTOЕдиницаИзмеренияТип 	= Б_ОбщиеПроцедурыИФункцииОбменаССайтом.ПолучениеТипОбъектаXDTO(ПараметрыОбмена, "ЕдиницаИзмерения");
		
		XDTOСтавкиНалоговТип 	= Б_ОбщиеПроцедурыИФункцииОбменаССайтом.ПолучениеТипОбъектаXDTO(ПараметрыОбмена, "СтавкиНалогов", Истина, XDTOТоварТип);	
		XDTOСтавкаНалогаТип 	= Б_ОбщиеПроцедурыИФункцииОбменаССайтом.ПолучениеТипОбъектаXDTO(ПараметрыОбмена, "СтавкаНалога", Истина, XDTOСтавкиНалоговТип);	
		
		XDTOЗначенияРеквизитовТип 	= Б_ОбщиеПроцедурыИФункцииОбменаССайтом.ПолучениеТипОбъектаXDTO(ПараметрыОбмена, "ЗначенияРеквизитов", Истина, XDTOТоварТип);
		XDTOЗначениеРеквизитаТип 	= Б_ОбщиеПроцедурыИФункцииОбменаССайтом.ПолучениеТипОбъектаXDTO(ПараметрыОбмена, "ЗначениеРеквизита");
		
		Для каждого ТекТовар из ТзнТоваров Цикл
			
			XDTOТовар 		= ПараметрыОбмена.МояФабрикаXDTO.Создать(XDTOТоварТип); 
			
			XDTOТовар.Ид 				= XMLСтрока(ТекТовар.Идентификатор);
			XDTOТовар.НомерВерсии 		= Б_ОбщиеПроцедурыИФункцииОбменаССайтом.ПолучитьВерсиюОбъекта(ПараметрыОбмена, ТекТовар.ВерсияДанных, "Товаров");

			XDTOТовар.ПометкаУдаления 	= XMLСтрока(ТекТовар.ПометкаУдаления);
			
			XDTOТовар.БазоваяЕдиница	= XMLСтрока(ТекТовар.ИдентификаторБазовойЕдиницы);
			
			ВыгрузитьГруппыНоменклатурыXDTO(ПараметрыОбмена, XDTOТовар, XDTOТоварТип, ТекТовар, ВыгружатьПоДеревуТоваров, ТаблицаДереваГрупп);
			
			лОписаниеТовара = ТекТовар.Объект.ДополнительноеОписаниеНоменклатуры;
			лДополнительноеОписаниеНоменклатуры = ?(СтрДлина(лОписаниеТовара) > 10000, Лев(лОписаниеТовара, 10000), лОписаниеТовара);
			
			Для каждого ТекСтр из ПараметрыОбмена.СоответствиеОсновныхРеквизитовНоменклатуры Цикл
				
				лЗначение = ПолучитьЗначениеПоля1С(ПараметрыОбмена, лМенеджерВременныхТаблиц, ТекСтр, ТекТовар, лДополнительноеОписаниеНоменклатуры);
				
				Если лЗначение <> Неопределено тогда 
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////					
					Если  ТекСтр.НаименованиеПоля = "Штрихкод"  тогда
						//Сообщить("Грёбанный штрихкод");
						Если  СтрДлина(лЗначение)> 14 тогда
							//Сообщить("Длинна грёбанного штрихкода больше 14");
							лЗначение = "Штрихкод";
						КонецЕсли;
					КонецЕсли;
					
					//Если  лЗначение = "008.001.001.262" тогда
					//	лЗначение = "008001001262" 
					//КонецЕсли;
													
					//Сообщить ("PGHJKDRGFSDKJGFHSKJDG    " + ТекСтр.НаименованиеПоля );
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	
					XDTOТовар[ТекСтр.НаименованиеПоля]	= ?(лЗначение = NULL, ?(ТекСтр.НаименованиеПоля = "Вес" , 0, ""), лЗначение);
					
				КонецЕсли;
				
			КонецЦикла;
			
			Если ПараметрыОбмена.ВыгружатьЗначенияСвойствВТовары тогда
				ВыгрузитьСвойстваНоменклатурыXDTO(ПараметрыОбмена, XDTOТовар, XDTOТоварТип, ТекТовар, лМенеджерВременныхТаблиц);
			КонецЕсли;
			
			Если ЗначениеЗаполнено(ТекТовар.СтавкаНДС) Тогда
				
				XDTOСтавкиНалогов 		= ПараметрыОбмена.МояФабрикаXDTO.Создать(XDTOСтавкиНалоговТип); 
				XDTOСтавкаНалога 		= ПараметрыОбмена.МояФабрикаXDTO.Создать(XDTOСтавкаНалогаТип); 
				
				XDTOСтавкаНалога.Наименование 	= ПараметрыОбмена.НаименованиеНалога;
				XDTOСтавкаНалога.Ставка 		= ПолучитьПоСтавкеНДСЗначениеДляВыгрузки(ТекТовар.СтавкаНДС);
				
				XDTOСтавкиНалогов.СтавкаНалога.Добавить(XDTOСтавкаНалога);
				XDTOТовар.СтавкиНалогов = XDTOСтавкиНалогов;
				
			КонецЕсли;
			
			XDTOЗначенияРеквизитов 		= ПараметрыОбмена.МояФабрикаXDTO.Создать(XDTOЗначенияРеквизитовТип); 
			
			Если ТекТовар.ДополнительноеОписаниеНоменклатурыВФорматеHTML тогда
				Б_ОбщиеПроцедурыИФункцииОбменаССайтом.ДобавитьЗначениеРеквизитаXDTO(ПараметрыОбмена, XDTOЗначенияРеквизитов, XDTOЗначениеРеквизитаТип, "ОписаниеВФорматеHTML", лДополнительноеОписаниеНоменклатуры);
			КонецЕсли;
			
			Если ПараметрыОбмена.ВыгружатьКартинкиИФайлы тогда
				
				ОписаниеФайлов 		= Новый Соответствие;
				Файлы 				= Новый Массив;
				
				ВыгрузитьИзображенияНоменклатуры(ПараметрыОбмена, ИмяКаталога, XDTOТовар, лМенеджерВременныхТаблиц, ТекТовар, ОписаниеФайлов, ВыгруженоКартинок, МассивКартинок, СозданоКартинок);
				ВыгрузитьФайлыНоменклатуры(ПараметрыОбмена, ИмяКаталога, XDTOТовар, лМенеджерВременныхТаблиц, ТекТовар, Файлы, ОписаниеФайлов, ВыгруженоФайлов, МассивФайлов, СозданоФайлов);

				Для Каждого Файл Из Файлы Цикл
					
					Б_ОбщиеПроцедурыИФункцииОбменаССайтом.ДобавитьЗначениеРеквизитаXDTO(ПараметрыОбмена, XDTOЗначенияРеквизитов, XDTOЗначениеРеквизитаТип, "Файл", Файл);				
					
				КонецЦикла;
				
				Для Каждого ОписаниеФайла Из ОписаниеФайлов Цикл
					
					Файл = ОписаниеФайла.Ключ;
					Описание = ОписаниеФайла.Значение;
					
					Б_ОбщиеПроцедурыИФункцииОбменаССайтом.ДобавитьЗначениеРеквизитаXDTO(ПараметрыОбмена, XDTOЗначенияРеквизитов, XDTOЗначениеРеквизитаТип, "ОписаниеФайла", Файл + "#" + Описание);
					
				КонецЦикла;
				
			КонецЕсли;
			
			лТипНоменклатуры = "Товар";
			
			Если ТекТовар.ПриоритетСортировки = 2 тогда
				лТипНоменклатуры = "Комплект";
			ИначеЕсли ТекТовар.ПриоритетСортировки = 3 тогда
				лТипНоменклатуры = "Набор";
			ИначеЕсли ТекТовар.ПриоритетСортировки = 4 тогда
				лТипНоменклатуры = "Услуга";          			
			КонецЕсли;
			
			Б_ОбщиеПроцедурыИФункцииОбменаССайтом.ДобавитьЗначениеРеквизитаXDTO(ПараметрыОбмена, XDTOЗначенияРеквизитов, XDTOЗначениеРеквизитаТип, "ВидНоменклатуры", ТекТовар.ВидНоменклатуры.Наименование);
			Б_ОбщиеПроцедурыИФункцииОбменаССайтом.ДобавитьЗначениеРеквизитаXDTO(ПараметрыОбмена, XDTOЗначенияРеквизитов, XDTOЗначениеРеквизитаТип, "ТипНоменклатуры", лТипНоменклатуры);
			
			Для каждого ТекСтр из ПараметрыОбмена.СоответствиеДополнительныхРеквизитовНоменклатуры Цикл
				
				лЗначение = ПолучитьЗначениеПоля1С(ПараметрыОбмена, лМенеджерВременныхТаблиц, ТекСтр, ТекТовар, лДополнительноеОписаниеНоменклатуры);
				
				Если лЗначение <> Неопределено тогда 

					Б_ОбщиеПроцедурыИФункцииОбменаССайтом.ДобавитьЗначениеРеквизитаXDTO(ПараметрыОбмена, XDTOЗначенияРеквизитов, XDTOЗначениеРеквизитаТип, ТекСтр.НаименованиеПоля, ?(лЗначение = NULL, "", лЗначение));
					
				КонецЕсли;
			
			КонецЦикла;
			
			XDTOТовар.ЗначенияРеквизитов = XDTOЗначенияРеквизитов;
			
			Итератор = Итератор + 1;
			XDTOТовары.Товар.Добавить(XDTOТовар);   
		КонецЦикла;
		
		Владелец.Товары = XDTOТовары;
		
		Б_ОбщиеПроцедурыИФункцииОбменаССайтом.СообщитьПодробно("Выгружено " + Строка(ВыгруженоКартинок) + " картинок.", ПараметрыОбмена);
		Б_ОбщиеПроцедурыИФункцииОбменаССайтом.СообщитьПодробно("Создано " + Строка(СозданоКартинок) + " картинок для товаров.", ПараметрыОбмена);
		Б_ОбщиеПроцедурыИФункцииОбменаССайтом.СообщитьПодробно("Выгружено " + Строка(ВыгруженоФайлов) + " файлов.", ПараметрыОбмена);
		Б_ОбщиеПроцедурыИФункцииОбменаССайтом.СообщитьПодробно("Создано " + Строка(СозданоФайлов) + " файлов для товаров.", ПараметрыОбмена);
		Б_ОбщиеПроцедурыИФункцииОбменаССайтом.СообщитьПодробно("Выгрузка товаров в XML завершено. Выгружено " + Строка(Итератор) + " элементов.", ПараметрыОбмена);

	КонецЕсли;	
КонецПроцедуры





























Процедура ВыгрузитьПредложенияXDTO(ПараметрыОбмена, ИмяКаталога, Владелец, ВладелецТип, лМенеджерВременныхТаблиц, МассивКартинок, МассивФайлов)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = лМенеджерВременныхТаблиц;
	//Временная таблица формируется в функции СформироватьВременныеТаблицыПоИнформацииОТоварахПакета
	Запрос.Текст = "ВЫБРАТЬ
	|	*
	|ИЗ
	|	ВремНоменклатураСХарактеристиками КАК ВремНоменклатураСХарактеристиками
	|																	                		              		                              							
	|УПОРЯДОЧИТЬ ПО																		
	|	ВремНоменклатураСХарактеристиками.ПриоритетСортировки";
	
	ТзнПредложений = Запрос.Выполнить().Выгрузить();
	
	Если ТзнПредложений.Количество() > 0 тогда	
		
		Б_ОбщиеПроцедурыИФункцииОбменаССайтом.СообщитьПодробно("Выгрузка предложений в XML.", ПараметрыОбмена);
		
		Итератор			= 0;
		ВыгруженоКартинок 	= 0;
		ВыгруженоФайлов		= 0;
		СозданоКартинок 	= 0;
		СозданоФайлов		= 0;
		
		XDTOПредложенияТип 	= Б_ОбщиеПроцедурыИФункцииОбменаССайтом.ПолучениеТипОбъектаXDTO(ПараметрыОбмена, "Предложения", Истина, ВладелецТип);
		XDTOПредложения 	= ПараметрыОбмена.МояФабрикаXDTO.Создать(XDTOПредложенияТип); 
		
		XDTOПредложениеТип 	= Б_ОбщиеПроцедурыИФункцииОбменаССайтом.ПолучениеТипОбъектаXDTO(ПараметрыОбмена, "Предложение");
		
		XDTOХарактеристикиТовараТип 	= Б_ОбщиеПроцедурыИФункцииОбменаССайтом.ПолучениеТипОбъектаXDTO(ПараметрыОбмена, "ХарактеристикиТовара");
		XDTOХарактеристикаТовараТип 	= Б_ОбщиеПроцедурыИФункцииОбменаССайтом.ПолучениеТипОбъектаXDTO(ПараметрыОбмена, "ХарактеристикаТовара", Истина, XDTOХарактеристикиТовараТип);
		
		XDTOЗначенияСвойствТип 	= Б_ОбщиеПроцедурыИФункцииОбменаССайтом.ПолучениеТипОбъектаXDTO(ПараметрыОбмена, "ЗначенияСвойств", Истина, XDTOПредложениеТип);
		XDTOЗначенияСвойстваТип = Б_ОбщиеПроцедурыИФункцииОбменаССайтом.ПолучениеТипОбъектаXDTO(ПараметрыОбмена, "ЗначенияСвойства");
		
		XDTOЗначенияРеквизитовТип 	= Б_ОбщиеПроцедурыИФункцииОбменаССайтом.ПолучениеТипОбъектаXDTO(ПараметрыОбмена, "ЗначенияРеквизитов", Истина, XDTOПредложениеТип);
		XDTOЗначениеРеквизитаТип 	= Б_ОбщиеПроцедурыИФункцииОбменаССайтом.ПолучениеТипОбъектаXDTO(ПараметрыОбмена, "ЗначениеРеквизита");
		
		Для каждого ТекПредложение из ТзнПредложений Цикл
			
			XDTOПредложение 	= ПараметрыОбмена.МояФабрикаXDTO.Создать(XDTOПредложениеТип); 
			
			Если ЗначениеЗаполнено(ТекПредложение.Характеристика) тогда
				лИд 			= XMLСтрока(ТекПредложение.НоменклатураИдентификатор) + "#" + XMLСтрока(ТекПредложение.ХарактеристикаИдентификатор); 
				
				Если ПараметрыОбмена.ВыгружатьШтрихкоды тогда
					лШтрихкод 	= ПолучитьШтрихКод(ТекПредложение.Номенклатура, лМенеджерВременныхТаблиц, ТекПредложение.Характеристика);
				КонецЕсли;
				
				Если ПараметрыОбмена.ВыгружатьПланируемуюДатуПоступленияПредложения тогда
					лПланируемаяДатаПоступления = ПолучитьДатуПланирования(лМенеджерВременныхТаблиц, ТекПредложение.Номенклатура, ТекПредложение.Характеристика);
				КонецЕсли;
				
				//лНаименование   = ТекПредложение.Наименование + " (" + ТекПредложение.ХарактеристикаНаименование + ")";
				лНаименование   = ТекПредложение.Наименование + " (" + ТекПредложение.ХарактеристикаНаименование + ")";
				лВерсияДанных   = ТекПредложение.ХарактеристикаВерсияДанных;
				лПометкаУдаления= XMLСтрока(ТекПредложение.НоменклатураПометкаУдаления ИЛИ ТекПредложение.ХарактеристикаПометкаУдаления);
			Иначе
				лИд 			= XMLСтрока(ТекПредложение.НоменклатураИдентификатор); 
				
				Если ПараметрыОбмена.ВыгружатьШтрихкоды тогда
					лШтрихкод 	= ПолучитьШтрихКод(ТекПредложение.Номенклатура, лМенеджерВременныхТаблиц);
				КонецЕсли;
				
				Если ПараметрыОбмена.ВыгружатьПланируемуюДатуПоступленияПредложения тогда
					лПланируемаяДатаПоступления = ПолучитьДатуПланирования(лМенеджерВременныхТаблиц, ТекПредложение.Номенклатура);
				КонецЕсли;
				
				лНаименование   = ТекПредложение.Наименование;
				лВерсияДанных   = ТекПредложение.НоменклатураВерсияДанных;
				лПометкаУдаления= XMLСтрока(ТекПредложение.НоменклатураПометкаУдаления);
			КонецЕсли;
			
			
			XDTOПредложение.Ид 				= лИд;
			XDTOПредложение.НомерВерсии 	= Б_ОбщиеПроцедурыИФункцииОбменаССайтом.ПолучитьВерсиюОбъекта(ПараметрыОбмена, лВерсияДанных, "Предложений");
			XDTOПредложение.ПометкаУдаления	= лПометкаУдаления;
			
			Если ПараметрыОбмена.ВыгружатьШтрихкоды тогда
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
						Если  СтрДлина(лШтрихкод)> 14 тогда
							//Сообщить("Длинна грёбанного штрихкода больше 14");
							лШтрихкод = "Штрихкод";
						КонецЕсли;
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
				XDTOПредложение.Штрихкод 	= лШтрихкод;
			КонецЕсли;
				
			XDTOЗначенияРеквизитов 		= ПараметрыОбмена.МояФабрикаXDTO.Создать(XDTOЗначенияРеквизитовТип);  
			
			Если ПараметрыОбмена.ВыгружатьПланируемуюДатуПоступленияПредложения тогда
				Б_ОбщиеПроцедурыИФункцииОбменаССайтом.ДобавитьЗначениеРеквизитаXDTO(ПараметрыОбмена, XDTOЗначенияРеквизитов, XDTOЗначениеРеквизитаТип, "Планируемая дата поступления", лПланируемаяДатаПоступления);
				
			КонецЕсли;
			
			XDTOПредложение.Наименование 	= лНаименование;
			
			Если ПараметрыОбмена.ВыгружатьКартинкиИФайлыПредложений тогда
				
				Файлы = Новый Массив;
				ОписаниеФайлов = Новый Соответствие;
				
				ВыгрузкаФайловХарактеристикНоменклатуры(ПараметрыОбмена, ИмяКаталога, XDTOПредложение, лМенеджерВременныхТаблиц, ТекПредложение, Файлы, ОписаниеФайлов, ВыгруженоКартинок, МассивКартинок, ВыгруженоФайлов, МассивФайлов, СозданоКартинок, СозданоФайлов);
				
				Для Каждого Файл Из Файлы Цикл
					
					Б_ОбщиеПроцедурыИФункцииОбменаССайтом.ДобавитьЗначениеРеквизитаXDTO(ПараметрыОбмена, XDTOЗначенияРеквизитов, XDTOЗначениеРеквизитаТип, "Файл", Файл);				
					
				КонецЦикла;
				
				Для Каждого ОписаниеФайла Из ОписаниеФайлов Цикл
					
					Файл = ОписаниеФайла.Ключ;
					Описание = ОписаниеФайла.Значение;
					
					Б_ОбщиеПроцедурыИФункцииОбменаССайтом.ДобавитьЗначениеРеквизитаXDTO(ПараметрыОбмена, XDTOЗначенияРеквизитов, XDTOЗначениеРеквизитаТип, "ОписаниеФайла", Файл + "#" + Описание);
					
				КонецЦикла;
				
			КонецЕсли;
			
			Если XDTOЗначенияРеквизитов.ЗначениеРеквизита.Количество() > 0 тогда
								
				XDTOПредложение.ЗначенияРеквизитов = XDTOЗначенияРеквизитов;
	
			КонецЕсли;
			
			Если ПараметрыОбмена.ВыгружатьНаборы тогда 
				ВыгрузитьКомплектующиеНоменклатурыXDTO(ПараметрыОбмена, XDTOПредложение, XDTOПредложениеТип, ТекПредложение.Номенклатура, ТекПредложение.Характеристика, лМенеджерВременныхТаблиц, ТекПредложение.ПриоритетСортировки);
			КонецЕсли;
			
			Если (ТекПредложение.ВестиУчетПоХарактеристикам  И ЗначениеЗаполнено(ТекПредложение.Характеристика))
				И (ПараметрыОбмена.ВыгружатьХарактеристикиПредложений ИЛИ ПараметрыОбмена.ВыгружатьЗначенияСвойствВПредложения) Тогда	
			
				Запрос = Новый Запрос;
				запрос.МенеджерВременныхТаблиц = лМенеджерВременныхТаблиц;
				запрос.Текст =  "ВЫБРАТЬ
				| *
				|ИЗ
				|	ВремЗначенияСвойствХарактеристик КАК ВремЗначенияСвойствХарактеристик
				|ГДЕ
				|	ВремЗначенияСвойствХарактеристик.Характеристика = &Характеристика";
				
				Запрос.УстановитьПараметр("Характеристика", ТекПредложение.Характеристика);
				РезультатЗапроса = Запрос.Выполнить();
				
				Если НЕ РезультатЗапроса.Пустой() Тогда
					
					XDTOХарактеристикиТовара 	= ПараметрыОбмена.МояФабрикаXDTO.Создать(XDTOХарактеристикиТовараТип); 
					
					XDTOЗначенияСвойств = ПараметрыОбмена.МояФабрикаXDTO.Создать(XDTOЗначенияСвойствТип);
					
					Выборка = РезультатЗапроса.Выбрать();
					Пока Выборка.Следующий() Цикл
						
						Если Выборка.СвойствоНаименование = NULL тогда
							Продолжить;
						КонецЕсли;
						
						Если ПараметрыОбмена.ВыгружатьХарактеристикиПредложений тогда
						
							
							XDTOХарактеристикаТовара 	= ПараметрыОбмена.МояФабрикаXDTO.Создать(XDTOХарактеристикаТовараТип);
							
							XDTOХарактеристикаТовара.Наименование 	= Выборка.СвойствоНаименование;
							XDTOХарактеристикаТовара.Значение		= Строка(Выборка.Значение);
							
							XDTOХарактеристикиТовара.ХарактеристикаТовара.Добавить(XDTOХарактеристикаТовара);
							
						КонецЕсли;	
						
						Если ПараметрыОбмена.ВыгружатьЗначенияСвойствВПредложения тогда
						
							XDTOЗначенияСвойства = ПараметрыОбмена.МояФабрикаXDTO.Создать(XDTOЗначенияСвойстваТип);
							
							XDTOЗначенияСвойства.Ид = XMLСтрока(Выборка.ИдентификаторСвойства);
							
							XDTOЗначенияСвойства.Значение.Добавить(XMLСтрока(Выборка.ИдентификаторЗначения));
							
							XDTOЗначенияСвойств.ЗначенияСвойства.Добавить(XDTOЗначенияСвойства);	
							
						КонецЕсли;
						
					КонецЦикла;
					
					XDTOПредложение.ХарактеристикиТовара = XDTOХарактеристикиТовара;
					
					Если XDTOЗначенияСвойств.ЗначенияСвойства.количество() > 0 тогда
						XDTOПредложение.ЗначенияСвойств = XDTOЗначенияСвойств;
					КонецЕсли;
				КонецЕсли;
				
			КонецЕсли;
			
			XDTOПредложения.Предложение.Добавить(XDTOПредложение);
			Итератор = Итератор + 1;
			
		КонецЦикла;
		
		Если ПараметрыОбмена.ВыгружатьКартинкиИФайлыПредложений тогда
			Б_ОбщиеПроцедурыИФункцииОбменаССайтом.СообщитьПодробно("Выгружено " + Строка(ВыгруженоКартинок) + " картинок в предложениях.", ПараметрыОбмена);
			Б_ОбщиеПроцедурыИФункцииОбменаССайтом.СообщитьПодробно("Создано " + Строка(СозданоКартинок) + " картинок для предложений.", ПараметрыОбмена);
			Б_ОбщиеПроцедурыИФункцииОбменаССайтом.СообщитьПодробно("Выгружено " + Строка(ВыгруженоФайлов) + " файлов в предложениях.", ПараметрыОбмена);
			Б_ОбщиеПроцедурыИФункцииОбменаССайтом.СообщитьПодробно("Создано " + Строка(СозданоФайлов) + " файлов для предложений.", ПараметрыОбмена);
		КонецЕсли;
		
		Владелец.Предложения = XDTOПредложения;
		Б_ОбщиеПроцедурыИФункцииОбменаССайтом.СообщитьПодробно("Выгрузка предложений в XML завершено. Выгружено " + Строка(Итератор) + " предложений." , ПараметрыОбмена);
		
	КонецЕсли;	
	
КонецПроцедуры

